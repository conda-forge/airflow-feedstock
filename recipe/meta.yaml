{% set name = "airflow" %}
{% set pypi_name = "apache-airflow" %}
{% set version = "2.10.4" %}
# use the conda-forge min because anything lower isn't being built
{% set python_min = "3.9" %}
# python must be less than this version (also update in skip below)
{% set python_over = "3.13" %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ pypi_name[0] }}/{{ pypi_name }}/apache_airflow-{{ version }}.tar.gz
  sha256: 10ebf8b95c59ba229f06235665e92cc684577861cfd1e96bdbe3d3eb7cb5779a

build:
  skip: true  # [win or py>=313]
  number: 0

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
  host:
    - python
    - pip
    - setuptools


outputs:
  - name: {{ name }}
    script: install_airflow.sh
    build:
      entry_points:
        - airflow=airflow.__main__:main
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - python
        - gitdb ==4.0.11
        - gitpython ==3.1.43
        - hatchling ==1.26.3
        - packaging ==24.2
        - pathspec ==0.12.1
        - pluggy ==1.5.0
        # smmap 5.0.1 was not built on conda-forge
        - smmap ==5.0.0
        - tomli ==2.2.1  # [py<311]
        - trove-classifiers ==2024.10.21.16
        - pip
      run:
        - python
        - alembic >=1.13.1,<2.0
        - argcomplete >=1.10
        - asgiref >=2.3.0
        - attrs >=22.1.0
        - blinker >=1.6.2
        - colorlog >=6.8.2
        - configupdater >=3.1.1
        - connexion >=2.14.2,<3.0

        # connexion[flask] 2.14.2 dependencies
        - flask >=1.0.4,<2.3
        - itsdangerous >=0.24

        - cron-descriptor >=1.2.24
        - croniter >=2.0.2
        - cryptography >=41.0.0
        - deprecated >=1.2.13
        - dill >=0.2.2
        - eval_type_backport >=0.2.0  # [py<310]
        - flask-caching >=2.0.0
        - flask-session >=0.4.0,<0.6
        - flask-wtf >=1.1.0
        - flask >=2.2.1,<2.3
        - fsspec >=2023.10.0
        - google-re2 >=1.0  # [py<312]
        - google-re2 >=1.1  # [py>=312]
        - gunicorn >=20.1.0
        - httpx >=0.25.0
        - importlib-metadata >=6.5  # [py<312]
        - importlib-resources >=5.2,!=6.2.0,!=6.3.0,!=6.3.1  # [py<39]
        - itsdangerous >=2.0
        - jinja2 >=3.0.0
        - jsonschema >=4.18.0
        - lazy-object-proxy >=1.2.0
        - linkify-it-py >=2.0.0
        - lockfile >=0.12.2
        - markdown-it-py >=2.1.0
        - markupsafe >=1.1.1
        - marshmallow-oneofschema >=2.0.1
        - mdit-py-plugins >=0.3.0
        - methodtools >=0.4.7
        - opentelemetry-api >=1.24.0
        - opentelemetry-exporter-otlp >=1.24.0
        - packaging >=23.0
        - pathspec >=0.9.0
        - pendulum >=2.1.2,<4.0  # [py<312]
        - pendulum >=3.0.0,<4.0  # [py>=312]
        - pluggy >=1.5.0
        - psutil >=5.8.0
        - pygments >=2.0.1
        - pyjwt >=2.0.0
        - python-daemon >=3.0.0
        - python-dateutil >=2.7.0
        - python-nvd3 >=0.15.0
        - python-slugify >=5.0
        - requests >=2.27.0,<3
        - requests-toolbelt >=0.4.0
        - rfc3339-validator >=0.1.4
        - rich-argparse >=1.0.0
        - rich >=12.4.4
        - setproctitle >=1.3.3
        - sqlalchemy >=1.4.36,<2.0
        - sqlalchemy-jsonfield >=1.0
        - tabulate >=0.7.5
        - tenacity >=8.0.0,!=8.2.0
        - termcolor >=1.1.0
        - universal_pathlib >=0.2.2,!=0.2.4
        - werkzeug >=2.0,<3
        # see https://github.com/apache/airflow/blob/{{ version }}/airflow_pre_installed_providers.txt
        - apache-airflow-providers-common-compat
        - apache-airflow-providers-common-io
        - apache-airflow-providers-common-sql
        - apache-airflow-providers-fab >=1.0.2
        - apache-airflow-providers-ftp
        - apache-airflow-providers-http
        - apache-airflow-providers-imap
        - apache-airflow-providers-smtp
        - apache-airflow-providers-sqlite

    test:
      commands:
        - pip check
        - airflow --help
        # not working for linux emulation because passlib, a dependency of
        # sqlalchemy ends up creating a bcrypt hash, which Ubuntu CI's glibc
        # cannot handle.
        # https://github.com/conda-forge/airflow-feedstock/pull/103#issuecomment-1468162070
        - airflow db init  # [not linux-aarch64 and not linux-ppc64le]
      imports:
        - airflow
        - airflow.api
        - airflow.api.auth
        - airflow.api.auth.backend
        - airflow.api.client
        - airflow.api.common
        - airflow.api.common.experimental
        - airflow.api_connexion
        - airflow.cli
        - airflow.cli.commands
        - airflow.config_templates
        - airflow.contrib
        - airflow.contrib.hooks
        - airflow.contrib.operators
        - airflow.contrib.secrets
        - airflow.contrib.sensors
        - airflow.contrib.task_runner
        - airflow.contrib.utils
        - airflow.example_dags
        - airflow.example_dags.subdags
        - airflow.executors
        - airflow.hooks
        - airflow.jobs
        - airflow.kubernetes
        - airflow.lineage
        - airflow.macros
        - airflow.migrations
        - airflow.migrations.versions
        - airflow.models
        - airflow.operators
        - airflow.secrets
        - airflow.security
        - airflow.sensors
        - airflow.serialization
        - airflow.task
        - airflow.task.task_runner
        - airflow.ti_deps
        - airflow.ti_deps.deps
        - airflow.utils
        - airflow.utils.log
        - airflow.www
        - airflow.www.api
        - airflow.www.api.experimental
      requires:
        - pip

  # alternative name for the core package
  - name: apache-airflow
    requirements:
      run:
        - python
        - {{ pin_subpackage(name, exact=True) }}
    test:
      imports:
        - airflow
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-apache-atlas
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - atlasclient >=0.1.2
    test:
      imports:
        - airflow.lineage
        - airflow.lineage.entities
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-apache-webhdfs
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - python-hdfs >=2.0.4
        # avro extra
        - fastavro >=0.21.19
        # kerberos extra
        - requests-kerberos >=0.7.0
        # dataframe extra
        - fastavro >=0.21.19
        - pandas >=0.14.1
    test:
      imports:
        - airflow
        - hdfs
        - airflow.hooks.webhdfs_hook
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-aiobotocore
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - aiobotocore >=2.9.0
    test:
      imports:
        - airflow
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-async
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - eventlet >=0.33.3
        - gevent >=0.13
        - greenlet >=0.4.9
    test:
      imports:
        - airflow
        - eventlet
        - gevent
        - greenlet
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-github_enterprise
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - apache-airflow-providers-fab
        - authlib >=1.0.0
    test:
      imports:
        - airflow
        - authlib
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-google_auth
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - apache-airflow-providers-fab
        - authlib >=1.0.0
    test:
      imports:
        - airflow
        - authlib
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-kerberos
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - pykerberos >=1.1.13
        - requests-kerberos >=0.10.0
        - thrift_sasl >=0.2.0
    test:
      imports:
        - airflow
        - kerberos
        # failing because of bcrypt issue in docker images, see:
        # https://github.com/conda-forge/airflow-feedstock/pull/103#issuecomment-1468162070
        - airflow.api.auth.backend.kerberos_auth  # [not aarch64 and not ppc64le]
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-ldap
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - ldap3 >=2.5.1
        - python-ldap
    test:
      imports:
        - airflow
        - ldap3
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-leveldb
    build:
      noarch: python
      # noarch so just build it once per os
      skip: true  # [py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - plyvel >=1.5.1  # [not osx]
        - __linux  # [linux]
        - __osx    # [osx]
        - __win    # [win]
    test:
      imports:
        - airflow
        - plyvel
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-pandas
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - pandas >=1.2.5,<2.2
    test:
      imports:
        - airflow
        - pandas
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-password
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - bcrypt >=2.0.0
        - flask-bcrypt >=0.7.1
    test:
      imports:
        - airflow
        - flask_bcrypt
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-pydantic
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - pydantic>=2.3.0
    test:
      imports:
        - airflow
        - pydantic
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-rabbitmq
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - amqp
    test:
      imports:
        - airflow
        - amqp
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-s3fs
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - s3fs >=2023.10.0
    test:
      imports:
        - airflow
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-saml
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - python3-saml >=1.16.0
    test:
      imports:
        - airflow
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-sentry
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - blinker >=1.1
        - sentry-sdk >=1.32.0,!=1.33.0
    test:
      imports:
        - airflow
        - sentry_sdk
        - airflow.sentry
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-statsd
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - statsd >=3.3.0
    test:
      imports:
        - airflow
        - statsd
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-uv
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - uv >=0.1.32
    test:
      imports:
        - airflow
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip


  - name: {{ name }}-with-virtualenv
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      run:
        - python >={{ python_min }},<{{ python_over }}
        - {{ pin_subpackage(name, exact=True) }}
        - virtualenv
    test:
      imports:
        - airflow
        - virtualenv
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

about:
  home: http://airflow.apache.org
  license: Apache-2.0
  license_file:
    - LICENSE
    - 3rd-party-licenses/LICENSE-bootstrap3-typeahead.txt
    - 3rd-party-licenses/LICENSE-bootstrap.txt
    - 3rd-party-licenses/LICENSE-d3js.txt
    - 3rd-party-licenses/LICENSE-d3-shape.txt
    - 3rd-party-licenses/LICENSE-d3-tip.txt
    - 3rd-party-licenses/LICENSE-dagre-d3.txt
    - 3rd-party-licenses/LICENSE-datatables.txt
    - 3rd-party-licenses/LICENSE-elasticmock.txt
    - 3rd-party-licenses/LICENSE-eonasdan-bootstrap-datetimepicker.txt
    - 3rd-party-licenses/LICENSE-flask-kerberos.txt
    - 3rd-party-licenses/LICENSE-hue.txt
    - 3rd-party-licenses/LICENSE-jqclock.txt
    - 3rd-party-licenses/LICENSE-jquery.txt
    - 3rd-party-licenses/LICENSE-moment.txt
    - 3rd-party-licenses/LICENSE-normalize.txt
    - 3rd-party-licenses/LICENSE-pytest-capture-warnings.txt
    - 3rd-party-licenses/LICENSE-reproducible.txt
    - 3rd-party-licenses/LICENSES-ui.txt


  summary: |
    Airflow is a platform to programmatically author, schedule and monitor
    workflows

  description: |
    Use airflow to author workflows as directed acyclic graphs (DAGs)
    of tasks. The airflow scheduler executes your tasks on an array of
    workers while following the specified dependencies. Rich command
    line utilities make performing complex surgeries on DAGs a snap.
    The rich user interface makes it easy to visualize pipelines
    running in production, monitor progress, and troubleshoot issues
    when needed.

    When workflows are defined as code, they become more maintainable,
    versionable, testable, and collaborative.

  doc_url: http://pythonhosted.org/airflow/profiling.html
  dev_url: https://github.com/apache/airflow

extra:
  recipe-maintainers:
    - sodre
    - halldc
    - xylar
